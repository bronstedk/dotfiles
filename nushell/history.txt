ls
scoop install chezmoi
chezmoi.exe init
chezmoi.exe source-path
cd .local\share\chezmoi\
ls
which git
scoop.cmd install git
scoop.cmd uninstall git
scoop bucket add main
scoop install git
git config --global credential.helper manager
git config path
git --help
git config --help
cd
cd .config\
mkdir chezmoi
cd chezmoi\
ls
mv d:\omarchy_info\snapshot\home\bronstedk\.config\chezmoi\key.txt ./
mv d:\omarchy_info\snapshot\home\bronstedk\.config\chezmoi\chezmoi.toml ./
ls
scoop bucket add extras
scoop install extras/alacritty
reg import "C:\Users\djieu\scoop\apps\alacritty\current\install-context.reg"
reg import c:\Users\djieu\scoop\apps\alacritty\current\install-context.reg
scoop install extras/vcredist2022
which nu
ls
cd
$env.APPDATA
cd AppData\Roaming\
ls
mkdir alacritty
touch alacritty.toml
cd alacritty\
ls
cd ..
ls
mv alacritty.toml alacritty\
cd alacritty\
LS
ls
clear
scoop install extras/glazewm
scoop install extras/zebar
$env.Path
kill 2404
kill -
kill -h
kill -f 2404
ps | where name =~ glaze
kill -f 2404
kill -f 4956
kill -f 3768
ps | where name =~ glaze
scoop install main/neovim
systeminfo.exe
nvim alacritty.toml
git config list
cd Downloads\
touch chezmoi.targets
cd ..
ls
cd
cd .glzr\
ls
ls zebar\
ls glazewm\
cd glazewm\
nvim config.yaml
scoop install extras/gpg4win
cd d:\omarchy_info\gpg\
ls
gpg --import private.asc
which gpg
ls `c:\Program Files (x86)\`
$env.Path
cd AppData\Roaming\nushell\
ls
uname
$env.Path
chezmoi data | from json
chezmoi data | from json | $in.chezmoi
$env.Path
which gpg
cd d:\omarchy_info\gpg\
gpg --import private.asc
gpg --import public.asc
gpg --list-secret-keys --keyid-format=long
scoop install extras/vivaldi
$nu.config-path
cd .glzr\glazewm\
nvim config.yaml
cd d:\omarchy_info\websites\
which cat
which bat
scoop install main/bat
which less
scoop install main/less
cd ..
bat importantInfo.md
cd Downloads\
ls
mkdir templating test
cd Downloads\
rm test\
ls
mv templating\ templating_test\
scoop install main/go
cd templating_test\
LS
cd Downloads\templating_test\
ls
go mod init
go mod init templates
ls
touch main.go
nvim main.go
nvim --help
nvim
cd .config\
ls
nvim
scoop install main/zig
nvim ~/AppData/Roaming/alacritty/alacritty.toml
ls
nvim ~/AppData/Roaming/alacritty/alacritty.toml
cd Downloads\templating_test\
mkdir templates
touch templates\.bashrc.tmpl
cd Downloads\templating_test\
go run main.go
bat ~/.bashrc
rm ~/.bashrc
nvim templates\.bashrc.tmpl
mkdir templates\n
go run main.go
rm ~/.bashrc
ls ~/
go run main.go
scoop install main/tectonic
scoop install extras/tex-fmt
c
clea
clear 
cd Downloads\
ls
mkdir hw_e
cd hw_e\
ls
touch hw_e.tex
nvim hw_e.tex
scoop install main/tree-sitter
scoop install main/nodejs-lts
nvim hw_e.tex
scoop install main/nodejs-lts
nvim ~/.glzr/glazewm/config.yaml
nvim .config\nushell\env.nu
nvim hw_e.tex
alacritty .
alacritty.exe .
alacritty.exe --help
exit
cd Downloads\hw_e\
ls
nu -h
nu -c "ls"
touch test.tmpl
go run main.go
mkdir final_files
go run main.go
go build
ls
templates.exe
rm templates.exe
ls
rm importantInfo.md
scoop install extras/sumatrapdf
winget.exe search mangohud
cd d:\omarchy_info\snapshot\home\bronstedk\Documents\hw_email_sent\
ls
nvim hw_e.tex
cd Downloads\templating_test\
ls
go run main.go
go run main.go "C:Downloads"
go run main.go "C:\Downloads"
go run main.go "C:\\Downloads"
go run main.go "C:\\Downloads\\"
go run main.go "c:\\Downloads"
go run main.go "~\\Downloads"
go run main.go ~\Downloads
go run main.go "~\\Downloads"
go run main.go
go get github.com/goccy/go-yaml
ls
git init
git add .
git st
git diff main
git diff
git diff .
git branch
git branchs
git branch --help
git branch --list
ls
ls -a
git branch --list
git switch main
git status
git commit -m "initial commit"
which gpg
gpg --list-secret-keys --keyid-format=long
gpg --version
gpgconf.exe --kill all
gpgconf.exe --launch gpg-agent
gpgconf.exe --launch keyboxd
git commit -m "initial commit"
which gpg
which gpg 
which gpg | $in.path.0
echo "~/scoop/apps/gpg4win/current/GnuPG/bin/gpg.exe"
nvim .config\git\config
git commit -m "initial commit"
git branch
go run main.go
ls -a
bat .rule.yaml
go run main.go
winget search gemini
npm install -g @google/gemini-cli
gemini.cmd 
cd Downloads\
mkdir finance
cd finance\
cd Downloads\finance\
ls
go run main.go
go run main.go 480
time go run main.go 480
timeit -h
timeit { go run main.go 480 }
timeit { go run main.go 480.01 }
timeit { go run main.go 3.145193 }
timeit { go run main.go 480 }
timeit { go run main.go 480 } | $in
timeit { go run main.go 480 } | echo "what"
timeit { go run main.go 480 } | print "what"
clear 
timeit { go run main.go 480 } | print "what"
timeit { go run main.go 480 }
clear 
timeit { go run main.go 480 }
clear 
timeit { go run main.go 480 }
timeit { go run main.go 480 | from json }
timeit { go run main.go 480 | from json | print $in }
timeit { go run main.go 480 }
timeit { go run main.go 480 | from json | print $in }
nvim main.go
timeit { go run main.go 480 | from json | print $in }
clear 
timeit { go run main.go 480 | from json | print $in }
clear 
timeit { go run main.go 480 | from json | print $in }
git diff
git diff | clip.exe 
git ci
git add .
git ci
gpg --list-secret-keys --keyid-format=long
gpg --list-public-keys
git remote add origin git@github.com:bronstedk/dotfiles.git
git pull
ls ~/
git pull
git pull origin main
git log --oneline --graph
git push
git push --set-upstream origin main
git log --oneline --graph
clear 
powershell.exe 
clear 
cd Downloads\templating_test\
ls
bat main.go
bat fileSystem\fs.go
cd Downloads\templating_test\
timeit { go run main.go }
clear 
timeit { go run main.go }
c
clear 
timeit { go run main.go }
clear 
timeit { go run main.go }
clear 
timeit { go run main.go }
clear 
clear; timeit { go run main.go }
clear; gemini.cmd 
nvim fileSystem\fs.go
git diff
git diff | clip.exe 
git ci
git add .
git ci
winget search oh-my-posh
winget install --exact --id MartiCliment.UniGetUI --source winget
powershell.exe 
cd C:
cd C:\
rm -rf ProgramData\chocolatey\
nvim ~/.config/nushell/env.nu
clear
nvim ~/.config/nushell/env.nu
$env
uname
uname | $in.operating-system
uname | $in.operating-system | str downcase 
uname | $in.operating-system | str downcase | clip
scoop.cmd install extras/carapace-bin
$nu.cache-dir
mkdir $nu.cache-dir
nvim ~/.config/nushell/env.nu
cargo.exe install atuin
which cargo
cd .glzr\glazewm\
cd .config\nushell\
cargo.exe install atuin
cd .config\nushell\
scoop install main/fastfetch
cd .config\nushell\
winget install ajeetdsouza.zoxide
cd .config\nushell\
nvim sources.nu
zoxide.exe --help
nvim aliases.nu
nvim sources.nu
nvim env.nu
nvim sources.nu
cd .glzr\glazewm\
cd .config\nushell\
y
nvim functions.nu
print $env.PATH
yay -S carapace-bin
yay -S atuin
yay -S zoxide
waybar
yay -S ttf-cascadia-mono-nerd
waybar
yay -S uwsm
cd .config/hypr/
ls
yay -S swaybg swaysd
yay -S swaysd
sudo pacman -S swaysd
yay -S swayosd
yay -S wl-clip-persist
nvim autostart.conf
ls
nvim hyprland.conf.2
yay -S hyprshot satty
yay -S hyprpicker
ls
mv hyprland.conf.2 hyprland.conf
cd ~/.local/share/omarchy/bin/
ls
ll
ls -l
yay -S walker
walker
yay -S oh-my-posh
cd .config/
cd .config/nushell/
v env.nu
